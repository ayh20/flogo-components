{
  "name": "rtbutils",
  "type": "flogo:function",
  "ref": "github.com/ayh20/flogo-components/functions/rtbutils",
  "version": "0.1.3", 
  "title": "Miscellaneous functions for RTB project and others",
  "description": "misc utils",
  "homepage": "https://github.com/ayh20/flogo-components/tree/master/functions/rtbutils",
  "functions": [
    {
      "name": "urlencode",
      "description": "Make the passed string url safe  rtbutils.urlencode(\"Hello World\")",
      "args": [
        {
          "name": "input",
          "type": "string"
        }
      ], 
      "return": {
        "type": "string"
    }
    },
    {
      "name": "pathencode",
      "description": "Make the passed path string url safe  rtbutils.pathencode(\"path with?reserved+characters\")",
      "args": [
        {
          "name": "input",
          "type": "string"
        }
      ], 
      "return": {
        "type": "string"
    }
    },
    {
      "name": "jsontostring",
      "description": "Takes a passed json array and flattens it to a concatinated string",
      "args": [
        {
          "name": "inputarray",
          "type": "string",
          "description" : "The input array"
        },
        {
          "name": "itemname",
          "type": "string",
          "description" : "Name of item in array to concatenate"
        },
        {
          "name": "separator",
          "type": "string",
          "description" : "Chars to use to separate items"
        }
      ], 
      "return": {
        "type": "string"
    }
    },
    {
      "name": "stringtodate",
      "description": "Takes a string date and parses it using the passed Golang format string",
      "args": [
        {
          "name": "datestring",
          "type": "string",
          "description" : "The string to be parsed"
        },
        {
          "name": "format",
          "type": "string",
          "description" : "The Golang date formatter"
        }
      ], 
      "return": {
        "type": "datetime"
      }
    },
    {
      "name": "datetostring",
      "description": "Takes a date and formats it using the passed Golang format string",
      "args": [
        {
          "name": "date",
          "type": "datetime",
          "description" : "The date to be formatted"
        },
        {
          "name": "format",
          "type": "string",
          "description" : "The Golang date formatter"
        }
      ], 
      "return": {
        "type": "string"
      }
    },
    {
      "name": "timestamp",
      "description": "Formats the current time using the passed Golang format string",
      "args": [
        {
          "name": "format",
          "type": "string",
          "description" : "The Golang date formatter"
        }
      ], 
      "return": {
        "type": "string"
      }
    },
    {
      "name": "zipdata",
      "description": "Zip the passed data",
      "args": [
        {
          "name": "data",
          "type": "string",
          "description" : "The data to be zipped"
        }
      ], 
      "return": {
        "type": "bytes"
      }
    },
    {
      "name": "unzipdata",
      "description": "unzip passed data",
      "args": [
        {
          "name": "data",
          "type": "bytes",
          "description" : "The data to be unzipped"
        }
      ], 
      "return": {
        "type": "string"
      }
    },
    {
      "name": "bytestohex",
      "description": "take in bytes and output as hex",
      "args": [
        {
          "name": "data",
          "type": "bytes",
          "description" : "The data to be hexified"
        }
      ], 
      "return": {
        "type": "string"
      }
    }
  ]
}
